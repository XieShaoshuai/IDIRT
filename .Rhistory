colnames(temp) <- c("Accession", col_select$Condition)
# Replace NA to Zeros
temp <- replace(temp, is.na(temp), 0)
temp$Experiment <- i
Proteomics_Rep[[i]] <- temp
}
head(Proteomics_Rep[[1]])
# Per replicate
Proteomics_Ratio <- lapply(Proteomics_Rep, function(x) {
x$Ratio <- x$Sample/(x$Control + x$Sample)
return(x)
})
head(Proteomics_Ratio)
# Gather the data in one table
#names(Proteomics_Ratio) <- unique(swap_select$Experiment_Name)
Proteomics_Ratio_All <- do.call(rbind, Proteomics_Ratio)
head(Proteomics_Ratio)
head(Proteomics_Ratio_All)
table(is.na(Proteomics_Ratio_All$Ratio))
Mix_Summary <- Proteomics_Ratio_All %>%
na.omit(Ratio) %>%
group_by(Accession) %>%
summarise(
Rep = n(),
Ratio_Mean = mean(Ratio),
Ratio_SD = sd(Ratio),
Median = median(Ratio)
)
head(Mix_Summary)
temp <- Proteomics_Ratio_All %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) %>%
pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
head(temp)
Proteomics_Ratio_All %>%
head()
temp <- Proteomics_Ratio_All %>%
mutate(Log_Control = log2(Control),
Log_Sample = log2(Sample))
head(temp)
temp <- Proteomics_Ratio_All %>%
mutate(Log_Control = log2(Control),
Log_Sample = log2(Sample))
## Plot Correlation Control vs Sample
ggplot(temp, aes(x = Log_Control, y = Log_Sample, color = Experiment)) +
geom_point(show.legend = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
head(temp)
# Plot Log Intensities between Control and Sample
temp <- temp %>%
select(Accession, Experiment, Log_Control, Log_Sample) %>%
pivot_longer(cols = c(Log_Control, Log_Sample), names_to = "Condition", values_to = "Log_Intensity")
head(temp)
# Plot Log Intensities between Control and Sample
ggplot(temp, aes(x = Log_Intensity, color = Condition)) +
geom_density() +
facet_wrap(.~Experiment) +
theme_bw()
head(temp)
summary(temp$Log_Intensity)
temp
temp %>%
arrange(Log_Intensity) %>%
head8
temp %>%
arrange(Log_Intensity) %>%
head()
Proteomics_Ratio_All %>%
filter(Accession == "P04350")
temp$Log_Intensity <-  replace(temp$Log_Intensity, is.infinite(temp$Log_Intensity), 0)
## Plot Correlation Control vs Sample
ggplot(temp, aes(x = Log_Control, y = Log_Sample, color = Experiment)) +
geom_point(show.legend = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
temp <- Proteomics_Ratio_All %>%
mutate(Log_Control = log2(Control),
Log_Sample = log2(Sample))
## Plot Correlation Control vs Sample
ggplot(temp, aes(x = Log_Control, y = Log_Sample, color = Experiment)) +
geom_point(show.legend = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
temp <- temp %>%
select(Accession, Experiment, Log_Control, Log_Sample) %>%
pivot_longer(cols = c(Log_Control, Log_Sample), names_to = "Condition", values_to = "Log_Intensity")
temp$Log_Intensity <-  replace(temp$Log_Intensity, is.infinite(temp$Log_Intensity), 0)
# Plot Log Intensities between Control and Sample
ggplot(temp, aes(x = Log_Intensity, color = Condition)) +
geom_density() +
facet_wrap(.~Experiment) +
theme_bw()
temp <- Proteomics_Ratio_All %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) #%>%
#pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
head(temp)
temp <- temp %>%
select(Accession, Experiment, Log_Control, Log_Sample) %>%
pivot_longer(cols = c(Log_Control, Log_Sample), names_to = "Condition", values_to = "Log_Intensity")
temp$Log_Intensity <-  replace(temp$Log_Intensity, is.infinite(temp$Log_Intensity), 0)
# Plot Log Intensities between Control and Sample
ggplot(temp, aes(x = Log_Intensity, color = Condition)) +
geom_density() +
geom_rug() +
facet_wrap(.~Experiment) +
theme_bw()
temp <- Proteomics_Ratio_All %>%
mutate(Log_Control = log2(Control),
Log_Sample = log2(Sample))
## Plot Correlation Control vs Sample
ggplot(temp, aes(x = Log_Control, y = Log_Sample, color = Experiment)) +
geom_point(show.legend = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
temp <- temp %>%
select(Accession, Experiment, Log_Control, Log_Sample) %>%
pivot_longer(cols = c(Log_Control, Log_Sample), names_to = "Condition", values_to = "Log_Intensity")
temp$Log_Intensity <-  replace(temp$Log_Intensity, is.infinite(temp$Log_Intensity), 0)
# Plot Log Intensities between Control and Sample
ggplot(temp, aes(x = Log_Intensity, color = Condition)) +
geom_density() +
geom_rug() +
facet_wrap(.~Experiment) +
theme_bw()
temp <- Proteomics_Ratio_All %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) #%>%
#pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
head(temp)
temp <- Proteomics_Ratio_All %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) #%>%
#pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
head(temp)
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
temp %>%
filter(is.infinite(Ratio))
summary(temp$Ratio)
temp <- Proteomics_Ratio_All %>%
na.omit(Ratio) %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) #%>%
#pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(aes(xintercep = median(Ratio)), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(aes(xintercept = median(Ratio)), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
temp <- Proteomics_Ratio_All %>%
na.omit(Ratio) %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) #%>%
#pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data =Mix_Summary, mapping =  aes(xintercept = median(Ratio)), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data =Mix_Summary, mapping =  aes(xintercept = Median), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data =Mix_Summary, mapping =  aes(xintercept = media(Median)), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data =Mix_Summary, mapping =  aes(xintercept = median(Median)), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred") +
facet_wrap(.~Experiment) +
theme_bw()
temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio))
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred", linetype = "dashed") +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred", linetype = "dashed", alpha = 0.5) +
facet_wrap(.~Experiment) +
theme_bw()
temp <- Proteomics_Ratio_All %>%
na.omit(Ratio) %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) #%>%
#pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp, y = 0.2, text = as.character(Median_Exp))) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp, y = 0.2, label = as.character(Median_Exp))) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp, y = 0.2, label = round(Median_Exp, 2)),
inherit.aes = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp+0.01, y = 0.2, label = round(Median_Exp, 2)),
inherit.aes = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp+0.1, y = 0.2, label = round(Median_Exp, 2)),
inherit.aes = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp+0.1, y = 0.2, label = round(Median_Exp, 3)),
size = 1.5,
inherit.aes = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp+0.1, y = 0.2, label = round(Median_Exp, 3)),
size = 3.5,
inherit.aes = FALSE) +
facet_wrap(.~Experiment) +
theme_bw()
temp_num <- temp %>% group_by(Experiment) %>% count()
temp_num
temp_num <- temp %>% group_by(Experiment) %>% summarise(Proteins = length(unique(Accession)))
temp_num
%
## Plot Ratio Distribution
ggplot(temp, aes(x = Ratio, color = Experiment)) +
geom_density(show.legend = FALSE) +
geom_vline(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping =  aes(xintercept = Median_Exp), color = "darkred",
linetype = "dashed", alpha = 0.5) +
geom_text(data = temp %>% group_by(Experiment) %>% summarize(Median_Exp = median(Ratio)),
mapping = aes(x = Median_Exp+0.1, y = 0.2, label = round(Median_Exp, 3)),
size = 3.5,
inherit.aes = FALSE) +
## Add the number of proteins
facet_wrap(.~Experiment) +
theme_bw()
head(temp)
pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
head(temp)
temp <- Proteomics_Ratio_All %>%
na.omit(Ratio) %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) %>%
pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio)
head(temp)
temp <- Proteomics_Ratio_All %>%
na.omit(Ratio) %>%
#rownames_to_column(var="Experiment") %>%
select(Experiment, Accession, Ratio) %>%
pivot_wider(id_cols = Accession, names_from = Experiment, values_from = Ratio) %>%
select(-Accession)
head(temp)
pairs(temp)
pairs(temp,
upper.panel = NULL)
pairs(temp,
upper.panel = NULL,
pch = 21,
col = "grey70",
font.labels = 1)
pairs(temp,
upper.panel = NULL,
pch = 18,
col = "grey70",
font.labels = 1)
pairs(temp,
upper.panel = NULL,
lower.panel = panel.points,
pch = 18,
col = "grey70",
font.labels = 1)
panel.points<-function(x,y) {points(x,y,cex=3)}
pairs(temp,
upper.panel = NULL,
lower.panel = panel.points,
pch = 18,
col = "grey70",
font.labels = 1)
pairs(temp,
upper.panel = NULL,
lower.panel = panel.points,
#pch = 18,
#col = "grey70",
font.labels = 1)
panel.points<-function(x,y) {points(x,y,cex=0.5, pch = 18, color = "grey60")}
pairs(temp,
upper.panel = NULL,
lower.panel = panel.points,
#pch = 18,
#col = "grey70",
font.labels = 1)
panel.points<-function(x,y) {points(x,y,cex=0.5, pch = 18, col = "grey60")}
pairs(temp,
upper.panel = NULL,
lower.panel = panel.points,
#pch = 18,
#col = "grey70",
font.labels = 1)
# Object preparation From Proteomics Only
Proteomics_MIX <- list(
"Path_Proteomics_file" = "./data/Mix data/Mix_all_Proteins.txt",
"Metadata_Proteomics_file" = "./data/Metadata/Proteomics_Mix.csv"
)
# Libraries
library(tidyverse)
# Object preparation From Proteomics Only
Proteomics_MIX <- list(
"Path_Proteomics_file" = "../data/Mix data/Mix_all_Proteins.txt",
"Metadata_Proteomics_file" = "../data/Metadata/Proteomics_Mix.csv"
)
# Libraries
library(tidyverse)
prote_mix <- read.delim(Proteomics_MIX[["Path_Proteomics_file"]], stringsAsFactors = FALSE,
sep = "\t")
proteo_meta <- read.csv(Proteomics_MIX[["Metadata_Proteomics_file"]], stringsAsFactors = FALSE)
head(prote_mix)
head(proteo_meta)
# Initial number of proteins
dim(prote_mix)
# Filter process
prote_mix_clean <- prote_mix %>%
filter(
Master == "IsMasterProtein",
Protein.FDR.Confidence.Combined == "High",
Number.of.Unique.Peptides > 1,
Contaminant == "False"
)
# Number of proteins after filter
dim(prote_mix_clean)
# Object preparation From Proteomics Only
# Data to use:
# Proteomics mix object: Contains the Ratio of each proteins in each experiment (replicate)
head(Proteomics_Ratio_All)
# check stats from Ratio (all replicates)
summary(Proteomics_Ratio_All$Ratio)
# Object preparation From Proteomics Only
# Data to use:
# Proteomics mix object: Contains the Ratio of each proteins in each experiment (replicate)
head(Mix_Summary)
# check stats from Ratio (all replicates)
summary(Mix_Summary$Median)
nrow(Mix_Summary)
# check stats from Ratio (all replicates)
summary(Mix_Summary$Median)
nrow(Mix_Summary)
## Remove all Zeros and get Ratios
Ratios <-  Mix_Summary %>%
filter(Median > 0) %>%
pull(Median)
length(Ratios)
library(mixR)
install.packages()
install.packages("mixR")
install.packages("mixR")
install.packages("mixR")
install.packages("mixR")
x_binned <- bin(Ratios, brks = sep(0,1,length = 20)
x_binned <- bin(Ratios, brks = sep(0,1,length = 20))
x_binned <- bin(Ratios, brks = sep(0,1,length = 20))
x_binned <- mixR::bin(Ratios, brks = sep(0,1,length = 20))
x_binned <- mixR::bin(Ratios, brks = seq(0,1,length = 20))
x_binned
# Maximum Likelihood estimation
fit_val <- mixR::mixfit(x = x_binned,
ncomp = 1,
init.method = "kmeans")
head(fit_val)
# Maximum Likelihood estimation.
# the output are stats for a distribution that fit the Ratio values
fit_val <- mixR::mixfit(x = x_binned,
ncomp =2,
init.method = "kmeans")
head(fit_val)
# Maximum Likelihood estimation.
# the output are stats for a distribution that fit the Ratio values
fit_val <- mixR::mixfit(x = x_binned,
ncomp =1,
init.method = "kmeans")
head(fit_val)
View(fit_val)
fit_val[["data"]]
fit_val
## Get stats simulating a normal distribution
Ratios_mu <- mean(Ratios)
Ratios_mu
fit_val
## Get stats simulating a normal distribution
Cutoff_methods[["Stats_Ratios"]] <- list(
"mu" = mean(Ratios),
"sd" = sd(Ratios))
# Make Bins
x_binned <- mixR::bin(Ratios, brks = seq(0,1,length = 20))
# Maximum Likelihood estimation.
# the output are stats for a distribution that fit the Ratio values
fit_val <- mixR::mixfit(x = x_binned,
ncomp =1,
init.method = "kmeans",
family = "normal")
# Add the values in a list
Cutoff_methods <- list()
Cutoff_methods[["MIXR"]] <- fit_val
## Get stats simulating a normal distribution
Cutoff_methods[["Stats_Ratios"]] <- list(
"mu" = mean(Ratios),
"sd" = sd(Ratios))
fit_val
Ratios_mu
Cutoff_methods
cutoff_mixfit <- fit_val[["mu"]] + 2*fit_val[["sd"]]; cutoff_mixfit
cutoff_standard <- Cutoff_methods[["Stats_Ratios"]][["mu"]] + 2*Cutoff_methods[["Stats_Ratios"]][["sd"]] ; cutoff_standard
## Include in the list
Cutoff_methods[["Cutoff_Mixfit"]] <- cutoff_mixfit
Cutoff_methods[["Cutoff_standard"]] <- cutoff_standard
plot(Cutoff_methods$MIXR)
##
plot(Cutoff_methods$MIXR) +
geom_density(data = Mix_Summary, aes(x = Median))
# Libraries
library(tidyverse)
##
plot(Cutoff_methods$MIXR) +
geom_density(data = Mix_Summary, aes(x = Median))
##
plot(Cutoff_methods$MIXR) +
geom_density(data = Mix_Summary, aes(x = Median, group = "Original"))
##
plot(Cutoff_methods$MIXR) +
geom_density(data = Mix_Summary, aes(x = Median, color = "Original"))
##
plot(Cutoff_methods$MIXR) +
geom_density(data = Mix_Summary, aes(x = Median, colour = "Original"))
